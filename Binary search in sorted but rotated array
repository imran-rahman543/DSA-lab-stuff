#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

void swapp(int* a,int* b)
{
	int temp=*a;
	*a=*b;
	*b=temp;

}

int minele(int n,int arr[])
{

	int mn=INT_MAX;
	for (int i=0;i<n;i++)
	{
		mn=min(mn,arr[i]);
	}


	return mn;
	
}
int linear(int n, int arr[],int x)
{

	for (int i=0;i<n;i++)
	{
		if (arr[i]==x)
			return i;

	}

	return -1;
}



void arr_so(int n, int arr[],int brr[])
{

	int mn = minele(n,arr);
	int i = linear(n,arr,mn);
	
	int j=i;
	
	int x=0;
	for (int k=0;j<n;j++,k++)
	{
		brr[k]=arr[j];
		x=k;
	}
	
	if (i!=0)
	{
		for ( int k=n-i, f=0;k<n;k++,f++)
		{
			brr[k]=arr[f];

		}
	}

}
int binaryx(int n,int brr[])
{
	int l=0;
	int r=n-1;
	int mid;
	while (l<=r)
	{
		mid=(l+r)/2;
		if (mid+1<n && brr[mid]>brr[mid+1])

			l=mid+1;

		else 
		{
			r=mid-1;
		}
		
	}

	return brr[mid];
}

int binarym(int n,int brr[])
{
	int l=0;
	int r=n-1;
	int mid;
	while (l<=r)
	{
		mid=(l+r)/2;
		if (mid+1<n && brr[mid]>brr[mid+1])

			l=mid+1;

		else 
		{
			r=mid-1;
		}
		
	}

	return mid;
}

int binary1(int n,int arr[],int tar)
{
	int l=binarym(n,arr);
	int r=n-1;

	int mid;
	while (l<=r)
	{
		mid=(l+r)/2;

		if (arr[mid]==tar)
		{
			return mid;
		}

		else if (arr[mid]<tar)
		{
			l=mid+1;
		}
		else
		{
			r=mid-1;

		}
	}

	return -1;
}

int binary2(int n,int arr[],int tar)
{
	int l=0;
	int r=binarym(n,arr)-1;

	int mid;
	while (l<=r)
	{
		mid=(l+r)/2;

		if (arr[mid]==tar)
		{
			return mid;
		}

		else if (arr[mid]<tar)
		{
			l=mid+1;
		}
		else
		{
			r=mid-1;

		}
	}

	return -1;
}

int main ()
{
	int n;
	cin>>n;
	int arr[n];
	for (int i=0;i<n;i++)
	{
		cin>>arr[i];
	}

	int brr[n];

	arr_so(n,arr,brr);

	int ans=binaryx(n,arr);
	cout<<ans<<endl;
	// for (int i=0;i<n;i++)
	// {
	// 	cout<<brr[i]<<" ";
	// }


	int tar;
	cin>>tar;

	if (binary2(n,arr,tar)==binary1(n,arr,tar))
		cout<<-1<<endl;

	else if (binary2(n,arr,tar)!=-1)
		cout<<binary2(n,arr,tar)<<endl;
	else
		cout<<binary1(n,arr,tar)<<endl;
		
	










}
